{"version":3,"file":"component---src-pages-logs-index-jsx-6a9e3933e476696416ae.js","mappings":"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","sources":["webpack://denntenna.github.io/./node_modules/grommet/es6/components/Image/StyledImage.js","webpack://denntenna.github.io/./node_modules/grommet/es6/components/Image/Image.js","webpack://denntenna.github.io/./src/components/Image.jsx","webpack://denntenna.github.io/./src/pages/logs/index.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { fillStyle, genericStyles } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar FIT_MAP = {\n  cover: 'cover',\n  contain: 'contain'\n};\nvar fitStyle = css([\"flex:1 1;overflow:hidden;object-fit:\", \";\"], function (props) {\n  return FIT_MAP[props.fit];\n});\nvar StyledImage = styled.img.withConfig({\n  displayName: \"StyledImage\",\n  componentId: \"sc-ey4zx9-0\"\n})([\"\", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return props.fit && fitStyle;\n}, function (props) {\n  return props.fillProp && fillStyle(props.fillProp);\n}, function (props) {\n  return props.theme.image && props.theme.image.extend;\n}, function (props) {\n  return props.opacityProp && \"opacity: \" + (props.opacityProp === true ? props.theme.global.opacity.medium : props.theme.global.opacity[props.opacityProp] || props.opacityProp) + \";\\n  \";\n});\nStyledImage.defaultProps = {};\nObject.setPrototypeOf(StyledImage.defaultProps, defaultProps);\nexport { StyledImage };","var _excluded = [\"a11yTitle\", \"fallback\", \"onError\", \"opacity\", \"fill\", \"src\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useState } from 'react';\nimport { StyledImage } from './StyledImage';\nimport { ImagePropTypes } from './propTypes';\nvar Image = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      fallback = _ref.fallback,\n      onError = _ref.onError,\n      opacity = _ref.opacity,\n      fill = _ref.fill,\n      src = _ref.src,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useState = useState(false),\n      imageMissing = _useState[0],\n      setImageMissing = _useState[1];\n\n  var handleError = function handleError(event) {\n    if (onError) {\n      onError(event);\n    }\n\n    setImageMissing(true);\n  };\n\n  var extraProps = {\n    onError: (onError || fallback) && handleError\n  };\n  return /*#__PURE__*/React.createElement(StyledImage, _extends({\n    \"aria-label\": a11yTitle\n  }, rest, extraProps, {\n    ref: ref,\n    opacityProp: opacity,\n    fillProp: fill,\n    src: !imageMissing ? src : fallback\n  }));\n});\nImage.displayName = 'Image';\nexport { Image };","import React from \"react\";\nimport { Box, Text } from \"grommet\";\n\nexport function LogImage({ children, caption }) {\n  return (\n    <Box\n      width={\"small\"}\n      height={\"small\"}\n      gap={\"small\"}\n      alignContent={\"start\"}\n      border\n      pad={\"small\"}\n      round={\"xsmall\"}\n      margin={{ bottom: \"medium\", right: \"medium\" }}\n    >\n      {children}\n      <Text size={\"xsmall\"} weight={400}>\n        {caption}\n      </Text>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport DefaultMDXLayout from \"../../components/default-mdx-layout\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n  ResponsiveContext,\n  Box,\n  Heading,\n  Text,\n  Anchor,\n  Image,\n  Stack,\n} from \"grommet\";\nimport { LogImage } from \"../../components/Image\";\n\nconst MasonryLayout = (props) => {\n  const columnWrapper = {};\n  const result = [];\n\n  // create columns\n  for (let i = 0; i < props.columns; i++) {\n    columnWrapper[`column${i}`] = [];\n  }\n\n  for (let i = 0; i < props.children.length; i++) {\n    const columnIndex = i % props.columns;\n    columnWrapper[`column${columnIndex}`].push(\n      <Box style={{ marginBottom: `${props.gap}px` }}>{props.children[i]}</Box>\n    );\n  }\n\n  for (let i = 0; i < props.columns; i++) {\n    result.push(\n      <Box\n        style={{\n          marginLeft: `${i > 0 ? props.gap : 0}px`,\n          flex: 1,\n        }}\n      >\n        {columnWrapper[`column${i}`]}\n      </Box>\n    );\n  }\n\n  return (\n    <Box fill style={{ display: \"flex\" }}>\n      {result}\n    </Box>\n  );\n};\n\nconst Preview = ({ post }) => {\n  let featuredImg = getImage(\n    post.frontmatter.cover_image?.childImageSharp?.gatsbyImageData\n  );\n\n  return (\n    <Box>\n      {\" \"}\n      <GatsbyImage image={featuredImg} />\n    </Box>\n  );\n};\n\nconst Feed = ({ data }) => {\n  const posts = data.allMdx.nodes;\n  // const size = React.useContext(ResponsiveContext);\n  return (\n    <DefaultMDXLayout width=\"100%\" breadcrumb=\"logs\">\n      {/* <Text>{size}</Text> */}\n      <Box direction=\"row-responsive\" wrap={true}>\n        {posts\n          ? posts.map((post, ix) => (\n              <Box\n                key={ix}\n                direction={\"row-responsive\"}\n                gap={\"xsmall\"}\n                width={\"medium\"}\n                height={\"fit-content\"}\n                border={\"black\"}\n                round=\"small\"\n                margin={{ bottom: \"medium\", right: \"medium\" }}\n                overflow={\"hidden\"}\n              >\n                <Box>\n                  <Preview post={post} />\n                  <Box pad={\"medium\"}>\n                    <Text textAlign=\"left\">\n                      <Link to={`/${post.slug}`}>\n                        <Text weight={900}> {post.frontmatter.title}</Text>\n                      </Link>\n                      <Text>{` - `}</Text>\n                      <Text>{\" \" + post.frontmatter.description}</Text>\n                    </Text>\n                  </Box>\n                </Box>\n              </Box>\n            ))\n          : null}\n      </Box>\n      <Box direction=\"row-responsive\" wrap={true}>\n        <LogImage caption=\"What a blessing this drilling machine has been\">\n          <StaticImage\n            fit=\"cover\"\n            src={\"../../images/arranged-routers.jpg\"}\n            alt={\n              \"Neatly wrapped wires and internet equipment drilled to a wall\"\n            }\n          />\n        </LogImage>\n        <LogImage caption=\"First Pizza in the new oven\">\n          <StaticImage\n            fit=\"cover\"\n            src={\"../../images/pizza-new-oven.jpg\"}\n            alt={\"First Pizza in the new oven\"}\n          />\n        </LogImage>\n        <LogImage caption=\"New visiting cards\">\n          <Image\n            fit=\"cover\"\n            src={\"/tattle-card.gif\"}\n            alt={\"Tattle Visisting Cards\"}\n          />\n        </LogImage>\n        <LogImage caption=\"A handrawn labelled map of my Mumbai\">\n          <StaticImage\n            fit=\"cover\"\n            src=\"../../images/my-mumbai-map.jpg\"\n            alt={\"A handrawn labelled map of Mumbai\"}\n          />\n        </LogImage>\n        <LogImage caption=\"A picture of Mint Lounge Article on Viral Spiral\">\n          <StaticImage\n            fit=\"contain\"\n            src=\"../../images/vs-mint-article.png\"\n            alt={\"\"}\n          />\n        </LogImage>\n      </Box>\n    </DefaultMDXLayout>\n  );\n};\n\nexport const query = graphql`\n  query FeedIndexQuery {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/.*/src/pages/logs/\" } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          cover_image {\n            childImageSharp {\n              gatsbyImageData(width: 800)\n            }\n          }\n          date\n          description\n        }\n        fileAbsolutePath\n      }\n    }\n  }\n`;\n\nexport default Feed;\n"],"names":["FIT_MAP","cover","contain","fitStyle","css","props","fit","StyledImage","displayName","componentId","fillProp","theme","image","extend","opacityProp","global","opacity","medium","defaultProps","Object","setPrototypeOf","_excluded","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Image","forwardRef","_ref","ref","a11yTitle","fallback","onError","fill","src","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","_useState","useState","imageMissing","setImageMissing","extraProps","event","LogImage","children","caption","width","height","gap","alignContent","border","pad","round","margin","bottom","right","Text","size","weight","Preview","post","featuredImg","getImage","frontmatter","cover_image","childImageSharp","gatsbyImageData","G","posts","data","allMdx","nodes","breadcrumb","direction","wrap","map","ix","overflow","textAlign","to","slug","title","description","S","alt"],"sourceRoot":""}