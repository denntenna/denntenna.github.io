{"version":3,"file":"component---src-pages-index-jsx-e45e73a75688ae2166fe.js","mappings":"uQAQA,IAAMA,GAAUC,EAAAA,EAAAA,SAAOC,EAAAA,GAAV,2EAAGD,CAAH,oNAkFb,EA9DoB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACfC,GAAaC,EAAAA,EAAAA,QAAO,MAE1B,OACE,gBAACC,EAAA,EAAD,CAASC,MAAI,EAACC,MAAOC,EAAAA,GACnB,gBAAC,IAAD,CAAKC,YAAY,EAAMC,IAAK,SAC1B,gBAAC,IAAD,CAAKC,MAAI,EAACC,UAAW,SACnB,gBAAC,IAAD,CAAKC,UAAW,iBAAkBC,IAAK,SAAUC,MAAO,YACtD,gBAAC,KAAD,CAAMC,GAAG,KACP,gBAACC,EAAA,EAAD,CAASC,OAAQ,OAAQC,MAAO,GAAhC,cAYF,gBAAC,IAAD,CAAKL,IAAK,SACR,gBAAC,KAAD,CAAME,GAAI,SAAUI,MAAO,OACzB,gBAAC,IAAD,CAAMC,KAAM,SAAZ,YAIN,gBAAC,IAAD,CAAKR,UAAW,kBACd,gBAAC,KAAD,CAAMG,GAAG,cACP,gBAAC,IAAD,CAAKN,IAAI,SACP,gBAAC,IAAD,CAAMW,KAAK,SAAX,UAGJ,gBAAC,KAAD,CAAML,GAAG,SACP,gBAAC,IAAD,CAAKN,IAAI,SACP,gBAAC,IAAD,CAAMW,KAAK,SAAX,SAIJ,gBAAC,KAAD,CAAML,GAAG,gBACP,gBAAC,IAAD,CAAKN,IAAI,SACP,gBAAC,IAAD,CAAMW,KAAK,SAAX,gBAGJ,gBAAC,KAAD,CAAML,GAAG,kBACP,gBAAC,IAAD,CAAKN,IAAI,SACP,gBAAC,IAAD,CAAMW,KAAK,SAAX,oBAIN,gBAAC,IAAD,CAEEC,IAAKnB,EACLoB,UAAU,cAGd,gBAACxB,EAAD,KAAUG,O,gFCjFH,SAASsB,EAAT,GAA+C,IAA5BtB,EAA2B,EAA3BA,SAAUuB,EAAiB,EAAjBA,MAAiB,EAAVC,OACjD,OACE,gBAAC,IAAD,CACEC,MAAO,QACPT,OAAQ,CAAEU,IAAK,UACfH,MAAOA,GAAgB,OACvBf,IAAK,SAEJR,K,iGCmOP,UAtOkB,SAAC,GAAc,IAAZ2B,EAAW,EAAXA,KACNA,EAAKC,KAAKC,MACXF,EAAKG,IAAID,MACAF,EAAKI,aAAaF,MACnBF,EAAKK,YAAYH,MACxBF,EAAKM,KAAKJ,MAEvB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKpB,MAAI,EAACyB,SAAU,SAAUC,KAAM,OAAQxB,UAAW,kBACrD,gBAAC,IAAD,CAAKY,MAAO,SAAUE,OAAK,EAACS,SAAU,UACpC,gBAAC,IAAD,CAASX,MAAO,UACd,gBAAC,EAAAa,EAAD,CACEC,IAAK,+BACLC,IAAI,iBACJC,YAAY,UACZhB,MAAO,KAJT,yBAkDJ,gBAAC,IAAD,CAAKA,MAAO,e","sources":["webpack://denntenna.github.io/./src/components/index-layout.js","webpack://denntenna.github.io/./src/components/section.js","webpack://denntenna.github.io/./src/pages/index.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Grommet, Box, Heading, Text } from \"grommet\";\nimport { Helmet } from \"react-helmet\";\nimport Theme from \"./theme\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport TagBubble from \"./TagBubble\";\n\nconst Content = styled(Box)`\n  p,\n  li {\n    font-family: Noto Sans;\n  }\n  a,\n  a:link,\n  a:visited,\n  a:active {\n    color: #005f73;\n    text-decoration: underline;\n    text-decoration-color: #81b29a;\n  }\n  a:hover {\n    color: #005f73;\n    text-decoration: underline;\n    text-decoration-color: #f2cc8f;\n  }\n`;\n\nconst IndexLayout = ({ children }) => {\n  const commentBox = useRef(null);\n\n  return (\n    <Grommet full theme={Theme}>\n      <Box responsive={true} pad={\"small\"}>\n        <Box fill alignSelf={\"start\"}>\n          <Box direction={\"row-responsive\"} gap={\"medium\"} align={\"baseline\"}>\n            <Link to=\"/\">\n              <Heading margin={\"none\"} level={4}>\n                denntenna\n              </Heading>\n            </Link>\n            {/* <Box flex={\"grow\"}>\n              <Box direction={\"row-responsive\"} wrap={true} gap={\"xsmall\"}>\n                <TagBubble tag={\"#online-harms\"} />\n                <TagBubble tag={\"#information-disorder\"} />\n                <TagBubble tag={\"#hypermedia\"} />\n                <TagBubble tag={\"#p2p\"} />\n              </Box>\n            </Box> */}\n            <Box gap={\"small\"}>\n              <Link to={\"/about\"} color={\"red\"}>\n                <Text size={\"small\"}>about</Text>\n              </Link>\n            </Box>\n          </Box>\n          <Box direction={\"row-responsive\"}>\n            <Link to=\"/portfolio\">\n              <Box pad=\"small\">\n                <Text size=\"small\">Work</Text>\n              </Box>\n            </Link>\n            <Link to=\"/logs\">\n              <Box pad=\"small\">\n                <Text size=\"small\">Log</Text>\n              </Box>\n            </Link>\n\n            <Link to=\"/cheatsheets\">\n              <Box pad=\"small\">\n                <Text size=\"small\">Cheatsheet</Text>\n              </Box>\n            </Link>\n            <Link to=\"/reading-notes\">\n              <Box pad=\"small\">\n                <Text size=\"small\">Reading Notes</Text>\n              </Box>\n            </Link>\n          </Box>\n          <Box\n            // margin={{ top: \"large\" }}\n            ref={commentBox}\n            className=\"comments\"\n          ></Box>\n        </Box>\n        <Content>{children}</Content>\n      </Box>\n    </Grommet>\n  );\n};\n\nexport default IndexLayout;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\n\nexport default function Section({ children, width, border }) {\n  return (\n    <Box\n      round={\"small\"}\n      margin={{ top: \"medium\" }}\n      width={width ? width : \"100%\"}\n      pad={\"small\"}\n    >\n      {children}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Heading, Text, Anchor, Accordion, AccordionPanel } from \"grommet\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Edit } from \"react-feather\";\nimport Section from \"../components/section\";\nimport { Link, graphql } from \"gatsby\";\nimport IndexLayout from \"../components/index-layout\";\n\nconst IndexPage = ({ data }) => {\n  const logs = data.logs.nodes;\n  const oif = data.oif.nodes;\n  const readingNotes = data.readingNotes.nodes;\n  const cheatsheets = data.cheatsheets.nodes;\n  const feed = data.feed.nodes;\n\n  return (\n    <IndexLayout>\n      <Box fill overflow={\"hidden\"} wrap={\"true\"} direction={\"row-responsive\"}>\n        <Box width={\"medium\"} round overflow={\"hidden\"}>\n          <Section width={\"medium\"}>\n            <StaticImage\n              src={\"../images/sjngd-portrait.jpg\"}\n              alt=\"author picture\"\n              placeholder=\"blurred\"\n              width={1024}\n            />\n          </Section>\n        </Box>\n        {/* <Box width={\"medium\"}>\n          <Section width={\"medium\"}>\n            <Heading level={2} margin={{ bottom: \"small\", top: \"none\" }}>\n              Announcement\n            </Heading>\n            <Text>\n              I am currently hiring a Full stack javascript developer for{\" \"}\n              <Anchor href={\"https://tattle.co.in/\"} target={\"_blank\"}>\n                Tattle\n              </Anchor>\n            </Text>{\" \"}\n            <Anchor\n              href={\"https://tattle.co.in/career/fullstack/\"}\n              target={\"_blank\"}\n            >\n              Check out the Job Listing\n            </Anchor>\n          </Section>\n          <Section width={\"medium\"}>\n            <Heading level={2} margin={{ bottom: \"small\", top: \"none\" }}>\n              Feed\n            </Heading>\n            <Box gap=\"xsmall\">\n              <Box gap={\"small\"}>\n                {feed.slice(0, 3).map((item, ix) => (\n                  <Box>\n                    <Text>\n                      <Anchor href={item.frontmatter.url} target=\"_blank\">\n                        {item.frontmatter.title}\n                      </Anchor>\n                    </Text>\n                    <Text key={ix}>{item.frontmatter.description}</Text>\n                  </Box>\n                ))}\n              </Box>\n              <Text>\n                and <Link to={\"/feed\"}>{`${feed.length - 3} other`}</Link>\n              </Text>\n            </Box>{\" \"}\n          </Section>\n        </Box> */}\n\n        <Box width={\"medium\"}></Box>\n\n        {/* <Box width={\"medium\"}>\n          <Section width={\"medium\"}>\n            <Heading level={2} margin={{ bottom: \"small\", top: \"none\" }}>\n              Cheatsheets\n            </Heading>\n            <Box gap={\"xsmall\"}>\n              <Text>\n                {cheatsheets\n                  ? cheatsheets.map((cheatsheet) => (\n                      <Text>\n                        <Link to={`/${cheatsheet.slug}`}>\n                          <Text>{cheatsheet.frontmatter.title}</Text>\n                        </Link>\n                        {\", \"}\n                      </Text>\n                    ))\n                  : null}\n                {\" and \"}\n                <Link to={\"/cheatsheets\"}>{`${\n                  cheatsheets.length - 3\n                } others`}</Link>\n              </Text>\n            </Box>\n          </Section>\n\n          <Section width={\"medium\"}>\n            <Heading level={2} margin={{ bottom: \"small\", top: \"none\" }}>\n              Logs\n            </Heading>\n\n            <Text>\n              {logs\n                ? logs.slice(0, 3).map((log) => (\n                    <Text>\n                      <Link to={`/${log.slug}`}>\n                        <Text>\n                          {log.frontmatter.title +\n                            \" : \" +\n                            log.frontmatter.description}\n                        </Text>\n                      </Link>\n                      {\", \"}\n                    </Text>\n                  ))\n                : null}\n              and <Link to={\"/logs\"}>{`${logs.length - 3} others`}</Link>\n            </Text>\n          </Section>\n          <Section width={\"medium\"}>\n            <Heading level={2} margin={{ bottom: \"small\", top: \"none\" }}>\n              Notes{\" \"}\n            </Heading>\n\n            <Box gap={\"xsmall\"} direction={\"row-responsive\"}>\n              <Text>\n                {readingNotes\n                  ? readingNotes.slice(0, 3).map((readingNote, ix) => (\n                      <Text>\n                        <Link to={`/${readingNote.slug}`}>\n                          {`${readingNote.frontmatter.title}`}\n                        </Link>\n                        {`, `}\n                      </Text>\n                    ))\n                  : null}\n                and{\" \"}\n                <Link to={\"/reading-notes\"}>{`${\n                  readingNotes.length - 3\n                } others`}</Link>\n              </Text>\n            </Box>\n          </Section>\n        </Box> */}\n      </Box>\n    </IndexLayout>\n  );\n};\n\nexport const query = graphql`\n  query IndexQuery {\n    logs: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/.*/src/pages/logs/\" } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          date\n          description\n        }\n        fileAbsolutePath\n      }\n    }\n    cheatsheets: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/.*/src/pages/cheatsheets/\" } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          date\n        }\n        fileAbsolutePath\n      }\n    }\n    readingNotes: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/.*/src/pages/reading-notes/\" } }\n      sort: { fields: frontmatter___date, order: ASC }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          date\n          description\n        }\n        fileAbsolutePath\n      }\n    }\n    oif: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/.*/src/pages/oif/\" } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          date\n          description\n        }\n        fileAbsolutePath\n      }\n    }\n    feed: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/.*/src/pages/feed/\" } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          description\n          url\n        }\n        fileAbsolutePath\n      }\n    }\n    all: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/.*/src/pages/\" } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          date\n          description\n        }\n        fileAbsolutePath\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["Content","styled","Box","children","commentBox","useRef","Grommet","full","theme","Theme","responsive","pad","fill","alignSelf","direction","gap","align","to","Heading","margin","level","color","size","ref","className","Section","width","border","round","top","data","logs","nodes","oif","readingNotes","cheatsheets","feed","overflow","wrap","S","src","alt","placeholder"],"sourceRoot":""}