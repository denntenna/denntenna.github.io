{"version":3,"file":"component---src-pages-about-jsx-a1b70ccc6b0797a39ab8.js","mappings":"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","sources":["webpack://denntenna.github.io/./node_modules/grommet/es6/components/Paragraph/StyledParagraph.js","webpack://denntenna.github.io/./node_modules/grommet/es6/components/Paragraph/propTypes.js","webpack://denntenna.github.io/./node_modules/grommet/es6/components/Paragraph/Paragraph.js","webpack://denntenna.github.io/./src/pages/about.jsx","webpack://denntenna.github.io/./src/images/cv-denny-george-27-01-2023.pdf"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { genericStyles, normalizeColor, textAlignStyle } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar colorStyle = css([\"color:\", \";\"], function (props) {\n  return normalizeColor(props.colorProp, props.theme);\n});\n\nvar sizeStyle = function sizeStyle(props) {\n  var size = props.size || 'medium';\n  var data = props.theme.paragraph[size];\n  return css([\"font-size:\", \";line-height:\", \";max-width:\", \";\"], data ? data.size : size, data ? data.height : 'normal', props.fillProp ? 'none' : data && data.maxWidth);\n};\n\nvar fontFamily = css([\"font-family:\", \";\"], function (props) {\n  return props.theme.paragraph.font.family;\n});\nvar StyledParagraph = styled.p.withConfig({\n  displayName: \"StyledParagraph\",\n  componentId: \"sc-tbetod-0\"\n})([\"\", \" \", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return sizeStyle(props);\n}, function (props) {\n  return props.textAlign && textAlignStyle;\n}, function (props) {\n  return props.colorProp && colorStyle;\n}, function (props) {\n  return props.theme.paragraph.font && props.theme.paragraph.font.family && fontFamily;\n}, function (props) {\n  return props.theme.paragraph && props.theme.paragraph.extend;\n});\nStyledParagraph.defaultProps = {};\nObject.setPrototypeOf(StyledParagraph.defaultProps, defaultProps);\nexport { StyledParagraph };","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { colorPropType, genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    color: colorPropType,\n    fill: PropTypes.bool,\n    responsive: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge', 'xxlarge']), PropTypes.string]),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end', 'justify'])\n  });\n}\n\nexport var ParagraphPropTypes = PropType;","var _excluded = [\"color\", \"fill\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport { StyledParagraph } from './StyledParagraph';\nimport { ParagraphPropTypes } from './propTypes';\nvar Paragraph = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      fill = _ref.fill,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(StyledParagraph, _extends({\n    ref: ref,\n    colorProp: color,\n    fillProp: fill\n  }, rest));\n});\nParagraph.displayName = 'Paragraph';\nParagraph.prototype = ParagraphPropTypes;\nexport { Paragraph };","import React from \"react\";\nimport { Box, Heading, Paragraph, Text, Button } from \"grommet\";\nimport DefaultMDXLayout from \"../components/default-mdx-layout\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport CV from \"../images/cv-denny-george-27-01-2023.pdf\";\nimport { Link } from \"gatsby\";\n\nconst AboutPage = () => {\n  return (\n    <DefaultMDXLayout>\n      <Box direction={\"row-responsive\"}>\n        <Box width={\"large\"}>\n          <Heading level={2}>About</Heading>\n          <Box direction={\"row-responsive\"} gap={\"medium\"}>\n            <Box width={\"small\"} height={\"small\"}>\n              <StaticImage\n                src=\"../images/dp-udr.jpg\"\n                alt={\"An image of the author infront of a lake\"}\n              />\n            </Box>\n            <Box width={\"medium\"}>\n              <form\n                style={{\n                  border: \"1px solid #ccc\",\n                  padding: \"3px\",\n                  textAlign: \"center\",\n                }}\n                action=\"https://tinyletter.com/denntenna\"\n                method=\"post\"\n                target=\"popupwindow\"\n                onsubmit=\"window.open('https://tinyletter.com/denntenna', 'popupwindow', 'scrollbars=yes,width=800,height=600');return true\"\n              >\n                <Box>\n                  <Text size={\"medium\"}> Subscribe for updates</Text>\n                  <Text weight={300} size={\"small\"}>\n                    (sent out once a month)\n                  </Text>\n                </Box>\n                <p>\n                  <input\n                    type=\"text\"\n                    style={{ width: \"140px\" }}\n                    name=\"email\"\n                    id=\"tlemail\"\n                  />\n                </p>\n                <input type=\"hidden\" value=\"1\" name=\"embed\" />\n                <input type=\"submit\" value=\"Subscribe\" />\n              </form>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      <Paragraph>Hi,</Paragraph>\n      <Paragraph>\n        My name is denny. I am an engineer whose work engages with\n        socio-political issues using software and humor.\n      </Paragraph>\n      <Paragraph>\n        I created denntenna to share my creative practice on the internet. It\n        has a hydra like structure with various heads - digital garden, wiki,\n        social feed, CMS, publication platform etc. Have fun exploring!\n      </Paragraph>\n\n      <Box height={\"2.4em\"}></Box>\n\n      <Box>\n        <iframe\n          src=\"https://github.com/sponsors/dennyabrain/button\"\n          title=\"Sponsor dennyabrain\"\n          height=\"35\"\n          width=\"116\"\n          // style={{ border: \"0\" }}\n        ></iframe>\n      </Box>\n    </DefaultMDXLayout>\n  );\n};\n\nexport default AboutPage;\n","export default __webpack_public_path__ + \"static/cv-denny-george-27-01-2023-73094ea56aa0d8e92334b705c810195d.pdf\";"],"names":["colorStyle","css","props","colorProp","theme","fontFamily","paragraph","font","family","StyledParagraph","displayName","componentId","size","data","height","fillProp","maxWidth","sizeStyle","textAlign","extend","defaultProps","Object","setPrototypeOf","ParagraphPropTypes","_excluded","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Paragraph","forwardRef","_ref","ref","color","fill","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","Box","direction","width","Heading","level","gap","S","src","alt","style","border","padding","action","method","onsubmit","Text","weight","type","name","id","value","title"],"sourceRoot":""}